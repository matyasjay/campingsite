[{"title":"Animations","type":0,"sectionRef":"#","url":"/campingsite/api/Animations","content":"On this page Animations","keywords":""},{"title":"Configuration","type":0,"sectionRef":"#","url":"/campingsite/api/Configuration","content":"On this page Configuration","keywords":""},{"title":"FirePit","type":0,"sectionRef":"#","url":"/campingsite/api/Fire Pit","content":"On this page FirePit Environment ItemMain Quest The final goal of the game is to fill the requirements of the Fire Pit. Collect the resource in the environment and place them in the Fire Pit to lit the fire! After a brief delay the game offers to restart in which case the Fire Pit resets to its original state and the lit fire put out. Usage local PlayArea = game:GetService(&quot;Workspace&quot;):WaitForChild(&quot;PlayArea&quot;) print(PlayArea.Camp:WaitForChild(&quot;FirePit&quot;)) ","keywords":""},{"title":"GameGui","type":0,"sectionRef":"#","url":"/campingsite/api/GameGui","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#functions","content":" "},{"title":"showGameFrame​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#showGameFrame","content":"&lt;/&gt; GameGui.showGameFrame() → ()   "},{"title":"showWelcomeSign​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#showWelcomeSign","content":"&lt;/&gt; GameGui.showWelcomeSign() → ()  "},{"title":"Animate","type":0,"sectionRef":"#","url":"/campingsite/api/Animate","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#functions","content":" "},{"title":"LoadAnimation​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#LoadAnimation","content":"&lt;/&gt; Animate.LoadAnimation( humanoid: Humanoid ,-- The Humanoid object to load the animation to animationId: string-- The Asset ID of the Animation to be loaded ) → boolean-- True when the Animation was properly loaded and played Loads the Animation referenced by its Asset ID to the provided Humanoid.  "},{"title":"GetAnimationId​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#GetAnimationId","content":"&lt;/&gt; Animate.GetAnimationId( animationName: string-- The local name of the requested Animation ) → string-- The Asset ID of the requested Animation Get the Asset ID of the given animation stored in the Shared storage.  "},{"title":"LoadAnimationOnChange​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#LoadAnimationOnChange","content":"&lt;/&gt; Animate.LoadAnimationOnChange( boolValue: BoolValue ,-- The BoolValue to connect to animationId: string-- The Asset ID of the Animation to be loaded ) → () Load the given Animation referenced by its Asset ID when the provided BoolValue has been changed. "},{"title":"Observer","type":0,"sectionRef":"#","url":"/campingsite/api/Observer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#functions","content":" "},{"title":"CheckRequirements​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#CheckRequirements","content":"&lt;/&gt; Observer.CheckRequirements( requirements: Requirements, message: string ) → () "},{"title":"Types","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer##","content":""},{"title":"​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#Requirements","content":"type Requirements = {[string]: { current: number, required: number }}    "},{"title":"TryEnableObject​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#TryEnableObject","content":"&lt;/&gt; Observer.TryEnableObject(props: TryEnableObjectProps) → () "},{"title":"Types","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer##","content":""},{"title":"​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#TryEnableObjectProps","content":"interface TryEnableObjectProps { requirements: Requirements message: string object: Instance delay?: number initialize?: () → () callback?: () → () }   "},{"title":"Iterator","type":0,"sectionRef":"#","url":"/campingsite/api/Iterator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Iterator","url":"/campingsite/api/Iterator#functions","content":" "},{"title":"WalkModels​","type":1,"pageTitle":"Iterator","url":"/campingsite/api/Iterator#WalkModels","content":"&lt;/&gt; Iterator.WalkModels( models: {Model },-- The table of Models to call the callback on callback: ( model: Model , index: number ) → ()-- The callback function to call on each element in Models ) → () Execute the callback function on each element of a Model table. "},{"title":"Attributes","type":0,"sectionRef":"#","url":"/campingsite/api/Attributes","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#functions","content":" "},{"title":"Get​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Get","content":"&lt;/&gt; Attributes.Get(name: string) → Entry   "},{"title":"GetAll​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#GetAll","content":"&lt;/&gt; Attributes.GetAll() → {Entry}   "},{"title":"Set​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Set","content":"&lt;/&gt; Attributes.Set(attributes: {Entry}) → ()   "},{"title":"Put​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Put","content":"&lt;/&gt; Attributes.Put( name: string, value: boolean ) → ()  "},{"title":"StatsGui","type":0,"sectionRef":"#","url":"/campingsite/api/StatsGui","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StatsGui","url":"/campingsite/api/StatsGui#functions","content":" "},{"title":"showStatsFrame​","type":1,"pageTitle":"StatsGui","url":"/campingsite/api/StatsGui#showStatsFrame","content":"&lt;/&gt; StatsGui.showStatsFrame(player: Player ) → ()  "},{"title":"Statistics","type":0,"sectionRef":"#","url":"/campingsite/api/Statistics","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#functions","content":" "},{"title":"Get​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Get","content":"&lt;/&gt; Statistics.Get(name: string) → Entry   "},{"title":"GetAll​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#GetAll","content":"&lt;/&gt; Statistics.GetAll() → {Entry}   "},{"title":"Set​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Set","content":"&lt;/&gt; Statistics.Set(attributes: {Entry}) → ()   "},{"title":"Put​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Put","content":"&lt;/&gt; Statistics.Put( name: string, value: number ) → ()  "},{"title":"Trigger","type":0,"sectionRef":"#","url":"/campingsite/api/Trigger","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Trigger","url":"/campingsite/api/Trigger#functions","content":" "},{"title":"RunOnTouched​","type":1,"pageTitle":"Trigger","url":"/campingsite/api/Trigger#RunOnTouched","content":"&lt;/&gt; Trigger.RunOnTouched( trigger: Part ,-- The Part that needs to be touched in order to run the callback callback: (player: Player ) → ()-- The functionality to run when the trigger happens ) → () Executes the provided callback function when the trigger Part was touched by a Player. This method sets the Script.Parent to the Part provided in the first argument. "},{"title":"Persona","type":0,"sectionRef":"#","url":"/campingsite/api/Persona","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#functions","content":" "},{"title":"GetPlayers​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayers","content":"&lt;/&gt; Persona.GetPlayers() → {Player }-- The table of online Player objects Get all Player objects that are currently in the game.  "},{"title":"GetCurrentPlayer​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentPlayer","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentPlayer() → Player -- The current Player object Get the current local Player object.  "},{"title":"GetCurrentCharacter​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentCharacter","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentCharacter() → Model -- The Player#Character model of the current Player Get the current local Player#Character object.  "},{"title":"GetCharacterFromPlayer​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCharacterFromPlayer","content":"&lt;/&gt; Persona.GetCharacterFromPlayer( player: Player -- The Player to get the Player#Character from ) → Model -- The Player#Character model of the given Player Get the Player#Character object from a Player object.  "},{"title":"GetPlayerFromCharacter​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayerFromCharacter","content":"&lt;/&gt; Persona.GetPlayerFromCharacter( character: Model -- The Player#Character to get the Player from ) → Player -- The Player object of the given Player#Character Get the Player object from a Player#Character object.  "},{"title":"GetCurrentHumanoid​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentHumanoid","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentHumanoid() → Humanoid -- The Humanoid object of the current Player Get the Humanoid object of the current Player.  "},{"title":"GetAttribute​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetAttribute","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetAttribute( attribute: string-- The name of the current Player's attribute ) → {ValueBase }-- The ValueBase table of the current Player Get a specific attribute of the current Player.  "},{"title":"GetPlayerAttribute​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayerAttribute","content":"&lt;/&gt; Persona.GetPlayerAttribute( attribute: string,-- The name of the requested attribute player: Player -- The Player object to get the attribute from ) → {ValueBase }-- The ValueBase table of the current Player Get a specific attribute of the given Player object. "}]