"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5927],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=a,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},81527:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:2},i="Architecture Overview",s={unversionedId:"architecture",id:"architecture",title:"Architecture Overview",description:"Most of the following sections are copied from the Roblox Documentation",source:"@site/docs/architecture.md",sourceDirName:".",slug:"/architecture",permalink:"/campingsite/docs/architecture",draft:!1,editUrl:"https://github.com/matyasjay/campingsite/edit/main/docs/architecture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Getting Started",permalink:"/campingsite/docs/intro"},next:{title:"Code Conventions",permalink:"/campingsite/docs/conventions"}},c={},l=[{value:"Definitions",id:"definitions",level:2},{value:"Data Model",id:"data-model",level:3},{value:"Client-Server Runtime",id:"client-server-runtime",level:3},{value:"Objects",id:"objects",level:3},{value:"Server Storage",id:"server-storage",level:3},{value:"Replicated Storage",id:"replicated-storage",level:3},{value:"Starter Pack",id:"starter-pack",level:3},{value:"Server Scripts",id:"server-scripts",level:3},{value:"Player Scripts",id:"player-scripts",level:3},{value:"Character Scripts",id:"character-scripts",level:3},{value:"Structure",id:"structure",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"architecture-overview"},"Architecture Overview"),(0,a.kt)("admonition",{title:"Disclaimer",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Most of the following sections are copied from the ",(0,a.kt)("a",{parentName:"p",href:"https://create.roblox.com/docs/projects"},"Roblox Documentation"),"\nas is. They are included in the current document to provide contextual clarity\nabout terms and concepts used in the project.")),(0,a.kt)("p",null,"The current repository holds all the code that the game requires to run as well\nas some replicated models. Also an automated build process takes care of the intact\nstate and creates the latest ",(0,a.kt)("inlineCode",{parentName:"p"},".rbxm")," export file that could be imported directly\ninto Roblox Studio."),(0,a.kt)("h2",{id:"definitions"},"Definitions"),(0,a.kt)("h3",{id:"data-model"},"Data Model"),(0,a.kt)("p",null,"Every place is represented by a data model, a hierarchy of objects that describe\neverything about the place. The data model contains all objects that make up the\n3D world, such as parts, terrain, lighting, and other environmental elements.\nIt also contains objects that can control runtime behavior, such as scripts that\nmodify properties, call methods and functions, and respond to events that enable\ndynamic behavior and interactivity."),(0,a.kt)("p",null,"The Roblox engine uses the data model as a source of truth for a place's state,\nso it can simulate and render it on client devices."),(0,a.kt)("h3",{id:"client-server-runtime"},"Client-Server Runtime"),(0,a.kt)("p",null,"Roblox experiences are multiplayer by default and run in a client-server model.\nThe Roblox server is the ultimate authority for maintaining the experience's state,\nand is responsible for keeping all connected clients in sync with the server."),(0,a.kt)("h3",{id:"objects"},"Objects"),(0,a.kt)("p",null,"You place and organize objects in the data model to describe a place in Roblox.\nEvery object in Roblox inherits from the Instance class, which defines generic\nproperties, methods, and events that are common to all objects. Objects also define\ntheir own characteristics depending on the functionality the object provides."),(0,a.kt)("h3",{id:"server-storage"},"Server Storage"),(0,a.kt)("p",null,"Contains objects that are only meant for server use. You can use this container\nto store objects that you want to clone and parent to the workspace or other\ncontainers at runtime. For example, you can store large objects such as maps in\nthis container until they are needed and move them into the workspace only when\nrequired This lets you decrease client network traffic on initial join."),(0,a.kt)("h3",{id:"replicated-storage"},"Replicated Storage"),(0,a.kt)("p",null,"Contains objects that are available to both the server and connected clients.\nAny changes that occur on the client persist but won't be replicated to the server.\nThe server can overwrite changes on the client to maintain consistency.\nIn addition, you can use this container to replicate any objects that don't need\nto exist in the 3D world until needed for cloning and parenting to all incoming\ncharacter models."),(0,a.kt)("h3",{id:"starter-pack"},"Starter Pack"),(0,a.kt)("p",null,"Scripts that set up the player's inventory and generally contain ",(0,a.kt)("a",{parentName:"p",href:"/docs/tools-and-equipment"},"Tool"),"\nobjects but often contains local scripts as well."),(0,a.kt)("h3",{id:"server-scripts"},"Server Scripts"),(0,a.kt)("p",null,"Contains script objects that are required by server scripts, and other scripting\n-related objects that are only meant for server use. If your scripts require other,\nnon-scripting objects, you must place them in ServerStorage. Scripts in this container\nare never replicated to clients, which allows you to have secure, server-side logic."),(0,a.kt)("h3",{id:"player-scripts"},"Player Scripts"),(0,a.kt)("p",null,"All objects you store in these containers are non-persistent across sessions and\nreset every time a client rejoins. You can put objects in these containers such\nas player GUIs, client-side scripts, and other objects that are only relevant to the client."),(0,a.kt)("h3",{id:"character-scripts"},"Character Scripts"),(0,a.kt)("p",null,"Scripts that are copied to the client when they spawn. These scripts do not persist\nwhen the player respawns."),(0,a.kt)("h2",{id:"structure"},"Structure"),(0,a.kt)("p",null,"Since Rojo is a filesystem based tool, the structure of the codebase and related\nassets are quite important. There were many iterations already to refine and get\nthe optimal results. According to the current state, the root level directories\nand their roles are the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"build")),(0,a.kt)("p",{parentName:"li"},"This directory holds the script to build the project files into a single instance\n",(0,a.kt)("em",{parentName:"p"},"(explained below)")," and the latest build output, the ",(0,a.kt)("inlineCode",{parentName:"p"},"latest.rbxm")," file")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"project")),(0,a.kt)("p",{parentName:"li"},"The actual Rojo configuration is the result of merging all ",(0,a.kt)("inlineCode",{parentName:"p"},".project.json"),"\nfiles in the ",(0,a.kt)("inlineCode",{parentName:"p"},"project")," directory. The project files are split into multiple\nscopes like ",(0,a.kt)("inlineCode",{parentName:"p"},"Meta"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Scripts"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Tools")," and so on. The reason is\nseparation of concerns and to make configuration objects not too overwhelming."),(0,a.kt)("p",{parentName:"li"},"You can check out the ",(0,a.kt)("a",{parentName:"p",href:"https://rojo.space/docs/v7/project-format/#example-projects"},"example project configurations"),"\nto get an idea about the syntax and how to manage different aspects of the game\nat the project configuration level.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"src")),(0,a.kt)("p",{parentName:"li"},"All the source code and exported models. The code written in ",(0,a.kt)("inlineCode",{parentName:"p"},"luau")," and all\nscripts are inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"Scripts")," directory while exported ",(0,a.kt)("inlineCode",{parentName:"p"},".rbxm")," files are\nfound inside ",(0,a.kt)("inlineCode",{parentName:"p"},"Models")," for clarity."))))}u.isMDXComponent=!0}}]);