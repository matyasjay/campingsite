[{"title":"AttributesConfig","type":0,"sectionRef":"#","url":"/campingsite/api/AttributesConfig","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"AttributesConfig","url":"/campingsite/api/AttributesConfig#properties","content":" "},{"title":"DefaultAttributes​","type":1,"pageTitle":"AttributesConfig","url":"/campingsite/api/AttributesConfig#DefaultAttributes","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; AttributesConfig.DefaultAttributes: {string}   "},{"title":"Defaults​","type":1,"pageTitle":"AttributesConfig","url":"/campingsite/api/AttributesConfig#Defaults","content":"&lt;/&gt; AttributesConfig.Defaults: {[string]: boolean | number}   "},{"title":"Keys​","type":1,"pageTitle":"AttributesConfig","url":"/campingsite/api/AttributesConfig#Keys","content":"&lt;/&gt; AttributesConfig.Keys: {string}  "},{"title":"Attributes","type":0,"sectionRef":"#","url":"/campingsite/api/Attributes","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#functions","content":" "},{"title":"Get​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Get","content":"&lt;/&gt; Attributes.Get(name: string) → Entry   "},{"title":"GetAll​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#GetAll","content":"&lt;/&gt; Attributes.GetAll() → {Entry}   "},{"title":"Set​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Set","content":"&lt;/&gt; Attributes.Set(attributes: {Entry}) → ()   "},{"title":"Put​","type":1,"pageTitle":"Attributes","url":"/campingsite/api/Attributes#Put","content":"&lt;/&gt; Attributes.Put( name: string, value: boolean ) → ()  "},{"title":"Animations","type":0,"sectionRef":"#","url":"/campingsite/api/Animations","content":"On this page Animations Main Script Configure animations and trigger event based on Player variable changes. info Export created animations as an .rbxm files into the ReplicatedStorage to make it available for other scripts for reference. You can create animations by placing the Animator Platform into the Workspace and use the rigs on the platform to develop the animation. Exported Animations The currently available game animations in .rbxm format. Their filenameshould be the same as the configured ID. Usage local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local Animate = require(ReplicatedStorage.Toolkits:WaitForChild(&quot;Animate&quot;)) local Attributes = require(ReplicatedStorage.Variables:WaitForChild(&quot;Attributes&quot;)) local AttributesConfig = require(ReplicatedStorage:WaitForChild(&quot;AttributesConfig&quot;)) local event = Attributes.Get(AttributesConfig.Keys.MyAttribute) local animation = &quot;MyAnimationId&quot; Animate.LoadAnimationOnChange(event, animation) Animator Platform The Animator Platform is a floating Workspace element outside of the PlayArea that could be used to configure animations. The platform must contain at least one Rig to begin creating a new Animation.","keywords":""},{"title":"GameGui","type":0,"sectionRef":"#","url":"/campingsite/api/GameGui","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#functions","content":" "},{"title":"showGameFrame​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#showGameFrame","content":"&lt;/&gt; GameGui.showGameFrame() → ()   "},{"title":"showWelcomeSign​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#showWelcomeSign","content":"&lt;/&gt; GameGui.showWelcomeSign() → ()   "},{"title":"showPitNeeds​","type":1,"pageTitle":"GameGui","url":"/campingsite/api/GameGui#showPitNeeds","content":"&lt;/&gt; GameGui.showPitNeeds(message: string) → ()  "},{"title":"Animate","type":0,"sectionRef":"#","url":"/campingsite/api/Animate","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#functions","content":" "},{"title":"LoadAnimation​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#LoadAnimation","content":"&lt;/&gt; Animate.LoadAnimation( humanoid: Humanoid ,-- The Humanoid object to load the animation to animationId: string-- The Asset ID of the Animation to be loaded ) → boolean-- True when the Animation was properly loaded and played Loads the Animation referenced by its Asset ID to the provided Humanoid.  "},{"title":"GetAnimationId​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#GetAnimationId","content":"&lt;/&gt; Animate.GetAnimationId( animationName: string-- The local name of the requested Animation ) → string-- The Asset ID of the requested Animation Get the Asset ID of the given animation stored in the Shared storage.  "},{"title":"LoadAnimationOnChange​","type":1,"pageTitle":"Animate","url":"/campingsite/api/Animate#LoadAnimationOnChange","content":"&lt;/&gt; Animate.LoadAnimationOnChange( boolValue: BoolValue ,-- The BoolValue to connect to animationId: string-- The Asset ID of the Animation to be loaded ) → () Load the given Animation referenced by its Asset ID when the provided BoolValue has been changed. "},{"title":"Iterator","type":0,"sectionRef":"#","url":"/campingsite/api/Iterator","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Iterator","url":"/campingsite/api/Iterator#functions","content":" "},{"title":"WalkModels​","type":1,"pageTitle":"Iterator","url":"/campingsite/api/Iterator#WalkModels","content":"&lt;/&gt; Iterator.WalkModels( models: {Model },-- The table of Models to call the callback on callback: ( model: Model , index: number ) → ()-- The callback function to call on each element in Models ) → () Execute the callback function on each element of a Model table. "},{"title":"Observer","type":0,"sectionRef":"#","url":"/campingsite/api/Observer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#functions","content":" "},{"title":"CheckRequirements​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#CheckRequirements","content":"&lt;/&gt; Observer.CheckRequirements( requirements: Requirements, message: Message ) → () "},{"title":"Types","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer##","content":""},{"title":"​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#Requirements","content":"type Requirements = {[string]: { current: number, required: number }}  "},{"title":"​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#Message","content":"type Message = { done: string, required: string }    "},{"title":"TryEnableObject​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#TryEnableObject","content":"&lt;/&gt; Observer.TryEnableObject(props: Props) → () "},{"title":"Types","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer##","content":""},{"title":"​","type":1,"pageTitle":"Observer","url":"/campingsite/api/Observer#Props","content":"interface Props { requirements: Requirements message: Message object: Instance delay?: number initialize?: (message: string) → () callback?: () → () }   "},{"title":"Remote","type":0,"sectionRef":"#","url":"/campingsite/api/Remote","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Remote","url":"/campingsite/api/Remote#properties","content":" "},{"title":"Enabled​","type":1,"pageTitle":"Remote","url":"/campingsite/api/Remote#Enabled","content":"This item is read only and cannot be modified. Read Only Configuration &lt;/&gt; Remote.Enabled: true   "},{"title":"Version​","type":1,"pageTitle":"Remote","url":"/campingsite/api/Remote#Version","content":"This item is read only and cannot be modified. Read Only Configuration &lt;/&gt; Remote.Version: 0.2.4  danger It is highly advised to bump the Remote Version after changing configuration data. Changing remote data structure may lead to data loss. Ensure the changes are not breaking and could be deployed safely or backup your existing data before the push! "},{"title":"Functions​","type":1,"pageTitle":"Remote","url":"/campingsite/api/Remote#functions","content":" "},{"title":"Initialize​","type":1,"pageTitle":"Remote","url":"/campingsite/api/Remote#Initialize","content":"&lt;/&gt; Remote.Initialize(player: Player ) → () Executed on the Players.PlayerAdded event to synchronise the Player Attributes with the default and remote variables. Updates the DataStore when game.OnClose event occurs. Usage src/Scripts/Main.server.luau local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local Players = game:GetService(&quot;Players&quot;) local Remote = require(ReplicatedStorage:WaitForChild(&quot;Remote&quot;)) Players.PlayerAdded:Connect(Remote.Initialize) Prepare and check remote connection Enable HTTP connection in Roblox Studio Configure the default values in Attributes Config Statistics Config Test the remote availability by playing your game  "},{"title":"StatisticsConfig","type":0,"sectionRef":"#","url":"/campingsite/api/StatisticsConfig","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"StatisticsConfig","url":"/campingsite/api/StatisticsConfig#properties","content":" "},{"title":"DefaultStatistics​","type":1,"pageTitle":"StatisticsConfig","url":"/campingsite/api/StatisticsConfig#DefaultStatistics","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; StatisticsConfig.DefaultStatistics: {string}   "},{"title":"Defaults​","type":1,"pageTitle":"StatisticsConfig","url":"/campingsite/api/StatisticsConfig#Defaults","content":"&lt;/&gt; StatisticsConfig.Defaults: {boolean}   "},{"title":"Keys​","type":1,"pageTitle":"StatisticsConfig","url":"/campingsite/api/StatisticsConfig#Keys","content":"&lt;/&gt; StatisticsConfig.Keys: {string}  "},{"title":"Statistics","type":0,"sectionRef":"#","url":"/campingsite/api/Statistics","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#functions","content":" "},{"title":"Get​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Get","content":"&lt;/&gt; Statistics.Get(name: string) → Entry   "},{"title":"GetAll​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#GetAll","content":"&lt;/&gt; Statistics.GetAll() → {Entry}   "},{"title":"Set​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Set","content":"&lt;/&gt; Statistics.Set(attributes: {Entry}) → ()   "},{"title":"Put​","type":1,"pageTitle":"Statistics","url":"/campingsite/api/Statistics#Put","content":"&lt;/&gt; Statistics.Put( name: string, value: number ) → ()  "},{"title":"Lighting","type":0,"sectionRef":"#","url":"/campingsite/api/Lighting","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#properties","content":" "},{"title":"Ambient​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#Ambient","content":"&lt;/&gt; Lighting.Ambient: Color3    "},{"title":"Brightness​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#Brightness","content":"&lt;/&gt; Lighting.Brightness: number   "},{"title":"TimeOfDay​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#TimeOfDay","content":"&lt;/&gt; Lighting.TimeOfDay: string   "},{"title":"GlobalShadows​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#GlobalShadows","content":"&lt;/&gt; Lighting.GlobalShadows: boolean   "},{"title":"EnvironmentDiffuseScale​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#EnvironmentDiffuseScale","content":"&lt;/&gt; Lighting.EnvironmentDiffuseScale: number   "},{"title":"EnvironmentSpecularScale​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#EnvironmentSpecularScale","content":"&lt;/&gt; Lighting.EnvironmentSpecularScale: number   "},{"title":"ShadowSoftness​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#ShadowSoftness","content":"&lt;/&gt; Lighting.ShadowSoftness: number   "},{"title":"Outlines​","type":1,"pageTitle":"Lighting","url":"/campingsite/api/Lighting#Outlines","content":"&lt;/&gt; Lighting.Outlines: boolean  "},{"title":"Persona","type":0,"sectionRef":"#","url":"/campingsite/api/Persona","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#functions","content":" "},{"title":"GetPlayers​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayers","content":"&lt;/&gt; Persona.GetPlayers() → {Player }-- The table of online Player objects Get all Player objects that are currently in the game.  "},{"title":"GetCurrentPlayer​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentPlayer","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentPlayer() → Player -- The current Player object Get the current local Player object.  "},{"title":"GetCurrentCharacter​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentCharacter","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentCharacter() → Model -- The Player#Character model of the current Player Get the current local Player#Character object.  "},{"title":"GetCharacterFromPlayer​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCharacterFromPlayer","content":"&lt;/&gt; Persona.GetCharacterFromPlayer( player: Player -- The Player to get the Player#Character from ) → Model -- The Player#Character model of the given Player Get the Player#Character object from a Player object.  "},{"title":"GetPlayerFromCharacter​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayerFromCharacter","content":"&lt;/&gt; Persona.GetPlayerFromCharacter( character: Model -- The Player#Character to get the Player from ) → Player -- The Player object of the given Player#Character Get the Player object from a Player#Character object.  "},{"title":"GetCurrentHumanoid​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetCurrentHumanoid","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetCurrentHumanoid() → Humanoid -- The Humanoid object of the current Player Get the Humanoid object of the current Player.  "},{"title":"GetAttribute​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetAttribute","content":"This item only works when running on the client. Client &lt;/&gt; Persona.GetAttribute( attribute: string-- The name of the current Player's attribute ) → {ValueBase }-- The ValueBase table of the current Player Get a specific attribute of the current Player.  "},{"title":"GetPlayerAttribute​","type":1,"pageTitle":"Persona","url":"/campingsite/api/Persona#GetPlayerAttribute","content":"&lt;/&gt; Persona.GetPlayerAttribute( attribute: string,-- The name of the requested attribute player: Player -- The Player object to get the attribute from ) → {ValueBase }-- The ValueBase table of the current Player Get a specific attribute of the given Player object. "},{"title":"StatsGui","type":0,"sectionRef":"#","url":"/campingsite/api/StatsGui","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"StatsGui","url":"/campingsite/api/StatsGui#functions","content":" "},{"title":"showStatsFrame​","type":1,"pageTitle":"StatsGui","url":"/campingsite/api/StatsGui#showStatsFrame","content":"&lt;/&gt; StatsGui.showStatsFrame(player: Player ) → ()  "},{"title":"Items","type":0,"sectionRef":"#","url":"/campingsite/docs/items","content":"Items","keywords":""},{"title":"Trigger","type":0,"sectionRef":"#","url":"/campingsite/api/Trigger","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Trigger","url":"/campingsite/api/Trigger#functions","content":" "},{"title":"RunOnTouched​","type":1,"pageTitle":"Trigger","url":"/campingsite/api/Trigger#RunOnTouched","content":"&lt;/&gt; Trigger.RunOnTouched( trigger: Part ,-- The Part that needs to be touched in order to run the callback callback: (player: Player ) → ()-- The functionality to run when the trigger happens ) → () Executes the provided callback function when the trigger Part was touched by a Player. This method sets the Script.Parent to the Part provided in the first argument. "},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/campingsite/docs/intro","content":"","keywords":""},{"title":"Welcome​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#welcome","content":"This project is a sandbox game designed to help users explore and learn Roblox development through a fully-managed Rojo setup. The documentation provides an overview of the game's main features and a high-level explanation of the implemented ideas. The documentation is divided into two main parts: This overview, which summarizes the key features, ideas, and solutions in the project.The API documentation, generated directly from the code, which covers technical details and usage instructions for developers. "},{"title":"Goals​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#goals","content":""},{"title":"Learning​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#learning","content":"The primary purpose of this project is to build skills for creating unique content and game mechanics in Roblox and Roblox Studio. To make learning more engaging and challenging, the project incorporates custom tools alongside the standard Roblox workflow, offering added flexibility and deepening knowledge. "},{"title":"Experience​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#experience","content":"This sandbox aims to deliver a cohesive and engaging experience, rather than a collection of isolated mechanics. Each development iteration introduces new features designed to increase player engagement and enhance the core gameplay. Detailed explanations of current gameplay features are provided in the following sections. "},{"title":"Development​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#development","content":"As this project focuses on technical exploration, the emphasis is on continuous development and enhancing the existing codebase. Before getting started, ensure you meet the following requirements listed below. Roblox StudioGitRojoRojo PluginLuau Language ServerNode.jsMoonwave "},{"title":"Rojo Server​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#rojo-server","content":"Rojo is the core tool for this sandbox, enabling synchronization between the local codebase and a running Roblox Studio instance. Rojo manages all elements, including models, scripts, and assets like meshes and images. After checking out the code from source control, open a terminal and run themake serve command. This will build the main project file (default.project.json) and start the server, which can then be connected to the Rojo plugin in Roblox Studio. Install and configure Rojo CLI For more detailed instructions please visit the official Rojo Websitewhere you can find all the details on how to setup your system to be able to use the Rojo services. "},{"title":"Sync Changes​","type":1,"pageTitle":"Getting Started","url":"/campingsite/docs/intro#sync-changes","content":"As you work on scripts, the service will automatically sync local changes. However, changes to the Workspace need to be exported each time they’re made. To minimize this overhead, it’s best to plan and execute changes in models and export them only when they’re finalized. The export format is standard .rbxm, and the main player area is contained within a single model called PlayArea. If any project files change, you’ll need to rebuild the project by stopping the current server and running make serve again. The process will fail if there are errors in any of the project configuration files. Once everything is set up and ready, you’re all set to start creating. Enjoy! "},{"title":"Utils","type":0,"sectionRef":"#","url":"/campingsite/api/Utils","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Utils","url":"/campingsite/api/Utils#types","content":" "},{"title":"StoreParams​","type":1,"pageTitle":"Utils","url":"/campingsite/api/Utils#StoreParams","content":"&lt;/&gt; type StoreParams = {[string]: boolean | number}  "},{"title":"Functions​","type":1,"pageTitle":"Utils","url":"/campingsite/api/Utils#functions","content":" "},{"title":"GetKeysFromStore​","type":1,"pageTitle":"Utils","url":"/campingsite/api/Utils#GetKeysFromStore","content":"&lt;/&gt; Utils.GetKeysFromStore(store: StoreParams) → StoreParams   "},{"title":"GetDefaultsFromStore​","type":1,"pageTitle":"Utils","url":"/campingsite/api/Utils#GetDefaultsFromStore","content":"&lt;/&gt; Utils.GetDefaultsFromStore(store: StoreParams) → StoreParams  "},{"title":"Tools","type":0,"sectionRef":"#","url":"/campingsite/docs/tools","content":"","keywords":""},{"title":"Create​","type":1,"pageTitle":"Tools","url":"/campingsite/docs/tools#create","content":""},{"title":"Configuration​","type":1,"pageTitle":"Tools","url":"/campingsite/docs/tools#configuration","content":"In project/Tools.project.json add the following section: { &quot;StarterPack&quot;: { &quot;$className&quot;: &quot;StarterPack&quot;, &quot;$path&quot;: &quot;src/Models/Player/StarterPack&quot;, &quot;MyTool&quot;: { &quot;$path&quot;: &quot;src/Models/Tools/MyTool.rbxm&quot;, &quot;Script&quot;: { &quot;$path&quot;: &quot;src/Scripts/Tools/MyTool.server.luau&quot; } } } }  "},{"title":"Script​","type":1,"pageTitle":"Tools","url":"/campingsite/docs/tools#script","content":"Create your Tool in src/Scripts/Tools/MyTool.server.luau for example: local ReplicatedStorage = game:GetService(&quot;ReplicatedStorage&quot;) local AttributesConfig = require(ReplicatedStorage:WaitForChild(&quot;Attributes&quot;)) local AttributesVariable = require(ReplicatedStorage.Variables:WaitForChild(&quot;Attributes&quot;)) local myTool = script.Parent local function onEquip() AttributesVariable.Put(AttributesConfig.Keys.HasAxe, true) end local function onUnequip() AttributesVariable.Put(AttributesConfig.Keys.HasAxe, false) end myTool.Equipped:Connect(onEquip) myTool.Unequipped:Connect(onUnequip) -- myTool.Activated:Connect(onActivate) -- myTool.Deactivated:Connect(onDeactivate)  "},{"title":"Stats","type":0,"sectionRef":"#","url":"/campingsite/docs/leader_stats","content":"","keywords":""},{"title":"Usage​","type":1,"pageTitle":"Stats","url":"/campingsite/docs/leader_stats#usage","content":"Setup the default &quot;leaderstats&quot; [Instance] in the Main script. The name has to be &quot;leaderstats&quot; since this is a built-in feature "},{"title":"Configuration​","type":1,"pageTitle":"Stats","url":"/campingsite/docs/leader_stats#configuration","content":"Configure the base stats in src/Main.server.luau as:  local leaderstats = Instance.new(&quot;Folder&quot;, player) leaderstats.Name = &quot;leaderstats&quot; local playerGold = Instance.new(&quot;NumberValue&quot;, leaderstats) playerGold.Name = &quot;Gold&quot; playerGold.Value = 0 while task.wait(1) do playerGold.Value += 10 end  "},{"title":"Update the stats​","type":1,"pageTitle":"Stats","url":"/campingsite/docs/leader_stats#update-the-stats","content":"You can change a stat as needed, here's an example that increases the amount of gold when the player touches myItem In src/Scripts/Items/MyItem.server.luau you can have something similar: local debounce = true myItem.Touched:Connect(function(hit) local character = hit.Parent local humanoid = char:FindFirstChild(&quot;Humanoid&quot;) local plr = game.Players:FindFirstChild(character.Name) if humanoid and debounce then debounce = false local pStats = plr:WaitForChild(&quot;leaderstats&quot;) local pGold = pStats.Gold pGold.Value += 10 task.wait(1) debounce = true end)  "}]